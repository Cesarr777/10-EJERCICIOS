//cesar alexis peñuelas cardenas
//itt
//video https://asciinema.org/a/5QJIjcaUtgps3aJZNmkzuhvsx
.section .text
.global set_bit
.global clear_bit
.global toggle_bit

// Función set_bit
// Entradas: x0 = número, x1 = posición del bit
// Salida: w0 = resultado con el bit establecido en 1
set_bit:
    mov w2, 1                // Colocar 1 en w2
    lsl w2, w2, w1           // Desplazar 1 a la izquierda por "posición" veces (1 << posición)
    orr w0, w0, w2           // Establecer el bit usando OR
    ret                      // Retornar el resultado

// Función clear_bit
// Entradas: x0 = número, x1 = posición del bit
// Salida: w0 = resultado con el bit borrado (establecido en 0)
clear_bit:
    mov w2, 1                // Colocar 1 en w2
    lsl w2, w2, w1           // Desplazar 1 a la izquierda por "posición" veces
    mvn w2, w2               // Invertir todos los bits para obtener una máscara con un 0 en la posición deseada
    and w0, w0, w2           // Borrar el bit usando AND
    ret                      // Retornar el resultado

// Función toggle_bit
// Entradas: x0 = número, x1 = posición del bit
// Salida: w0 = resultado con el bit alternado (cambiado entre 0 y 1)
toggle_bit:
    mov w2, 1                // Colocar 1 en w2
    lsl w2, w2, w1           // Desplazar 1 a la izquierda por "posición" veces
    eor w0, w0, w2           // Alternar el bit usando XOR
    ret                      // Retornar el resultado

    //c.
    #include <stdio.h>

// Declaración de las funciones en ensamblador
extern int set_bit(int num, int position);
extern int clear_bit(int num, int position);
extern int toggle_bit(int num, int position);

int main() {
    int num, position;

    // Solicitar al usuario que ingrese un número y la posición del bit
    printf("Ingrese un número: ");
    scanf("%d", &num);
    printf("Ingrese la posición del bit (0 = menos significativo): ");
    scanf("%d", &position);

    // Realizar las operaciones en ensamblador
    int result_set = set_bit(num, position);
    int result_clear = clear_bit(num, position);
    int result_toggle = toggle_bit(num, position);

    // Imprimir los resultados
    printf("Resultado después de establecer el bit: %d\n", result_set);
    printf("Resultado después de borrar el bit: %d\n", result_clear);
    printf("Resultado después de alternar el bit: %d\n", result_toggle);

    return 0;
}
